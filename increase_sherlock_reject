WITH a AS 
    (SELECT payment_method,
        countrycode,
        merchant,
        count(distinct date) qty_dist_days,
        count(distinct (case when cnt_reject = 0 and cnt > 100 then date else null end)) qty_dist_days_wo_fp, 
        sum(cnt_reject) / sum(cnt) as total_reject,
        sum(cnt) as total,
        avg(cnt) as avg,
        avg(perc_reject) as perc_avg,
        approx_percentile(perc_reject, 0.9) as perc_90,
        stddev_samp(perc_reject) as perc_stddev,
        case when stddev_samp(perc_reject) < 2 then round(avg(perc_reject) + 3 * stddev_samp(perc_reject), 2) 
             when stddev_samp(perc_reject) < 8 then round(avg(perc_reject) + 2 * stddev_samp(perc_reject), 2)
             else round(avg(perc_reject) + 1.5 * stddev_samp(perc_reject), 2) end as perc_avg_desv
    FROM
        (SELECT CAST(created AS DATE) AS date,
            case when req_operation_type in ('WITH_CVV', 'WITHOUT_CVV', 'TOKEN') then 'CARD'
                 else req_operation_type end as payment_method,
            countrycode,
            merchant,
            sum(case when res_result = 'REJECT' then 1 else 0 end) as cnt_reject, 
            count(caseid) AS cnt,
            sum(case when res_result = 'REJECT' then 1 else 0 end) * 100.0 / count(caseid) as perc_reject
        FROM 
            (select *,
                    row_number() over (partition by caseid order by created desc) as row_number
             from communication_logs.sherlock_analysis
             where cast(created AS date) > current_date - interval '32' day
                and cast(created AS date) < current_date - interval '1' day
                and res_result in ('ACCEPT', 'REJECT')
             )
        WHERE row_number = 1
        GROUP BY  1,2,3,4
        ORDER BY  1,2 desc
        )
    GROUP BY  payment_method, countrycode, merchant
    )
, b AS
    (SELECT
        case when req_operation_type in ('WITH_CVV', 'WITHOUT_CVV', 'TOKEN') then 'CARD'
             else req_operation_type end as payment_method,
        countrycode,
        merchant,
        sum(case when res_result = 'REJECT' then 1 else 0 end) as cnt_reject, 
        count(caseid) AS cnt,
        sum(case when res_result = 'REJECT' then 1.00 else 0 end) * 100 / count(caseid) as perc_reject
    FROM 
        (select *,
                row_number() over (partition by caseid order by created desc) as row_number
         from communication_logs.sherlock_analysis
         where (cast(created AS date) = current_date or 
            (cast(created AS date) = current_date - interval '1' day and cast(hour as bigint) > extract(hour from current_time)))
            and res_result in ('ACCEPT', 'REJECT')
         )
    WHERE row_number = 1
    GROUP BY  1,2,3
    ORDER BY  1,2 desc
    )
, merch AS 
    (select * 
    from default.merchant_data_pf
    )
SELECT alerta_inc.*
FROM 
    (SELECT 
        uuid() as alert_id,
        'INCREASE_SHERLOCK_REJECT' as alert_name,
        'ANOMALY_RESPONSE' as alert_type,
        b.merchant,  
        merch.merchant_name,
        merch.industry,
        b.payment_method, 
        b.countrycode as country_code, 
        cast(current_timestamp as timestamp) as alert_date,
        null as anomaly_field,
        null as anomaly_field_value,
        'PERC_QUANTITY' as type,
        --cnt, avg, perc_avg, perc_stddev,
        case when avg > 1000 and perc_avg < 5 and (perc_avg_desv - perc_avg < 5) then round(perc_avg + 5, 2)
             when perc_avg < 5 and (perc_avg_desv - perc_avg < 8) then round(perc_avg + 8, 2)
             when perc_avg_desv > 85 then 85.00
             else perc_avg_desv end as type_limit,
        round(perc_reject, 2) as type_value
    FROM a
    INNER JOIN b
        ON a.payment_method = b.payment_method and a.countrycode = b.countrycode and a.merchant = b.merchant
    LEFT JOIN merch
        ON a.merchant = merch.merchant_reference and a.countrycode = merch.country_code
    WHERE perc_reject > (case when avg > 10000 and perc_avg < 5 and (perc_avg_desv - perc_avg < 5) then round(perc_avg + 5, 2)
                              when perc_avg < 5 and (perc_avg_desv - perc_avg < 10) then round(perc_avg + 10, 2)
                              when perc_avg_desv > 85 then 85.00
                              else perc_avg_desv end)
        and cnt > 100 
        and qty_dist_days > 10
    ) alerta_inc
LEFT JOIN 
    (select row_number () over (partition by payment_method, country_code, merchant order by alert_date desc) as row_number, *
    from fraud_alert.alert
    where alert_name = 'INCREASE_SHERLOCK_REJECT'
    ) tabla_inc
        ON  alerta_inc.payment_method = tabla_inc.payment_method and
            alerta_inc.country_code = tabla_inc.country_code and
            alerta_inc.merchant = tabla_inc.merchant 
WHERE (tabla_inc.payment_method is null and 
       tabla_inc.country_code is null and 
       tabla_inc.merchant is null) or 
    (tabla_inc.row_number = 1 and cast(tabla_inc.alert_date as date) <= current_date - interval '7' day)
